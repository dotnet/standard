<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <RestoreSources Condition="'$(DotNetBuildOffline)' != 'true'">
      https://dotnet.myget.org/F/dotnet-core/api/v3/index.json;
      https://dotnet.myget.org/F/sourcelink/api/v3/index.json;
      $(RestoreSources)
    </RestoreSources>
    <MSBuildTreatWarningsAsErrors>false</MSBuildTreatWarningsAsErrors>
    <Language>C#</Language>

    <!-- Need to keep in sync with CodeAnalysis.targets file. -->
    <AnalyzerPropsFile>$(ArtifactsToolsetDir)Common\Tools.Analyzers.props</AnalyzerPropsFile>
    <!-- Don't use implicit fallback folder for packages -->
    <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
  </PropertyGroup>

  <!-- source-built packages -->
  <ItemGroup>
    <!-- arcade -->
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Packaging" Version="$(MicrosoftDotNetBuildTasksPackagingPackageVersion)" />
    <PackageReference Include="Microsoft.DotNet.CodeAnalysis" Version="$(MicrosoftDotNetCodeAnalysisPackageVersion)" />
    <PackageReference Include="Microsoft.DotNet.GenFacades" Version="$(MicrosoftDotNetGenFacadesPackageVersion)" />
  </ItemGroup>

  <!-- excluded from source build -->
  <ItemGroup Condition="'$(DotNetBuildFromSource)' != 'true'">
    <!-- arcade -->
    <PackageReference Include="Microsoft.DotNet.ApiCompat" Version="$(MicrosoftDotNetApiCompatPackageVersion)" />
    <PackageReference Include="Microsoft.DotNet.GenAPI" Version="$(MicrosoftDotNetGenApiPackageVersion)" />

    <!-- XML docs -->
    <PackageReference Include="$(XmlDocPackage)" Version="$(XmlDocPackageVersion)" />

    <!-- SourceLink -->
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="$(MicrosoftSourceLinkVersion)" PrivateAssets="all" IsImplicitlyDefined="true" />
    <PackageReference Include="Microsoft.SourceLink.Vsts.Git" Version="$(MicrosoftSourceLinkVersion)" PrivateAssets="all" IsImplicitlyDefined="true" />

    <!-- last NETStandard package for harvesting -->
    <PackageReference Include="$(NetStandardLibraryPackage)" Version="$(NetStandardLibraryPackageVersion)" ExcludeAssets="All" />

    <!-- analyzers -->
    <PackageReference Include="Desktop.Analyzers" Version="1.1.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.Common" Version="2.9.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="1.1.0" />
    <PackageReference Include="System.Runtime.Analyzers" Version="1.1.0" />
    <PackageReference Include="System.Runtime.InteropServices.Analyzers" Version="1.1.0" />
    <PackageReference Include="System.Security.Cryptography.Hashing.Algorithms.Analyzers" Version="1.1.0" />
  </ItemGroup>

  <PropertyGroup>
    <PackagesDir>$(NuGetPackageRoot)/</PackagesDir>
    <XmlDocFileRoot>$(PackagesDir)$(XmlDocPackage.ToLowerInvariant())/$(XmlDocPackageVersion)/xmldocs/netstandard</XmlDocFileRoot>
    <XmlDocDir>$(ArtifactsBinDir)docs</XmlDocDir>
  </PropertyGroup>

  <!-- the intellisense package doesn't use nuget conventions so we need to select manually -->
  <Target Name="GetDocFiles"
          Condition="'$(DotNetBuildFromSource)' != 'true'"
          AfterTargets="Restore">
    <ItemGroup>
      <DocFile Include="$(XmlDocFileRoot)/**/*.xml"/>
      <DocFile>
        <!-- trim off slash since it differs by platform and we need to do a string compare -->
        <LCID>$([System.String]::new('%(RecursiveDir)').TrimEnd('\').TrimEnd('/'))</LCID>
        <!-- set metadata expected by depProj -->
        <NuGetPackageId>$(XmlDocPackage)</NuGetPackageId>
        <NuGetPackageVersion>$(XmlDocPackageVersion)</NuGetPackageVersion>
      </DocFile>
      <DocFile>
        <!-- map LCID to culture name that VS expects -->
        <Culture>unknown</Culture>
        <Culture Condition="'%(LCID)' == '1028'">zh-hant/</Culture>
        <Culture Condition="'%(LCID)' == '1031'">de/</Culture>
        <!-- english is placed in the root -->
        <Culture Condition="'%(LCID)' == '1033'"></Culture>
        <Culture Condition="'%(LCID)' == '1036'">fr/</Culture>
        <Culture Condition="'%(LCID)' == '1040'">it/</Culture>
        <Culture Condition="'%(LCID)' == '1041'">ja/</Culture>
        <Culture Condition="'%(LCID)' == '1042'">ko/</Culture>
        <Culture Condition="'%(LCID)' == '1049'">ru/</Culture>
        <Culture Condition="'%(LCID)' == '2052'">zh-hans/</Culture>
        <Culture Condition="'%(LCID)' == '3082'">es/</Culture>
      </DocFile>
      <DocFile>
        <SubFolder>%(Culture)/</SubFolder>
      </DocFile>
    </ItemGroup>

    <Error Condition="'@(DocFile)' == ''" Text="Unable to find locate doc file for netstandard" />
    <Error Condition="'%(DocFile.Culture)' == 'unknown'" Text="Unknown language folder '%(LCID)' for doc files '@(DocFile)'" />

    <Copy 
      SourceFiles="@(DocFile)"
      DestinationFolder="$(XmlDocDir)/%(Culture)"
      SkipUnchangedFiles="true" />
  </Target>

  <UsingTask TaskName="Microsoft.DotNet.Arcade.Sdk.SaveItems" AssemblyFile="$(ArcadeSdkBuildTasksAssembly)" />

  <Target Name="GenerateAnalyzersPropsFile"
          AfterTargets="Restore"
          DependsOnTargets="ResolveLockFileAnalyzers">
    <SaveItems Condition="'@(Analyzer)' != ''"
               ItemName="ResolvedAnalyzer"
               Items="@(Analyzer)"
               File="$(AnalyzerPropsFile)" />
  </Target>

</Project>